// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: address.go

package view

import (
	ctx "github.com/cjtoolkit/ctx"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAddressView is a mock of AddressView interface
type MockAddressView struct {
	ctrl     *gomock.Controller
	recorder *MockAddressViewMockRecorder
}

// MockAddressViewMockRecorder is the mock recorder for MockAddressView
type MockAddressViewMockRecorder struct {
	mock *MockAddressView
}

// NewMockAddressView creates a new mock instance
func NewMockAddressView(ctrl *gomock.Controller) *MockAddressView {
	mock := &MockAddressView{ctrl: ctrl}
	mock.recorder = &MockAddressViewMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAddressView) EXPECT() *MockAddressViewMockRecorder {
	return m.recorder
}

// ExecAddressView mocks base method
func (m *MockAddressView) ExecAddressView(context ctx.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExecAddressView", context)
}

// ExecAddressView indicates an expected call of ExecAddressView
func (mr *MockAddressViewMockRecorder) ExecAddressView(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecAddressView", reflect.TypeOf((*MockAddressView)(nil).ExecAddressView), context)
}
