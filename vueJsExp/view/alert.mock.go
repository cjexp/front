// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: alert.go

package view

import (
	reflect "reflect"

	ctx "github.com/cjtoolkit/ctx/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockAlertView is a mock of AlertView interface
type MockAlertView struct {
	ctrl     *gomock.Controller
	recorder *MockAlertViewMockRecorder
}

// MockAlertViewMockRecorder is the mock recorder for MockAlertView
type MockAlertViewMockRecorder struct {
	mock *MockAlertView
}

// NewMockAlertView creates a new mock instance
func NewMockAlertView(ctrl *gomock.Controller) *MockAlertView {
	mock := &MockAlertView{ctrl: ctrl}
	mock.recorder = &MockAlertViewMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAlertView) EXPECT() *MockAlertViewMockRecorder {
	return m.recorder
}

// ExecAlertView mocks base method
func (m *MockAlertView) ExecAlertView(context ctx.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExecAlertView", context)
}

// ExecAlertView indicates an expected call of ExecAlertView
func (mr *MockAlertViewMockRecorder) ExecAlertView(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecAlertView", reflect.TypeOf((*MockAlertView)(nil).ExecAlertView), context)
}
